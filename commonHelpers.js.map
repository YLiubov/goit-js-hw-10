{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\ndocument.addEventListener('DOMContentLoaded', () => {\n  \n  const datePicker = flatpickr(\"#datetime-picker\", {\n        enableTime: true,\n        time_24hr: true,\n        defaultDate: new Date(),\n        minuteIncrement: 1,\n        onClose(selectedDates) {\n            const selectedDate = selectedDates[0];\n            const currentDate = new Date();\n\n            if (selectedDate <= currentDate) {\n                iziToast.error({\n                    title: 'Error',\n                    message: 'Please choose a date in the future'\n                });\n                document.getElementById('start-btn').disabled = true;\n            } else {\n                document.getElementById('start-btn').disabled = false;\n            }\n        }\n    });\n\n    document.getElementById('start-btn').addEventListener('click', () => {\n        const selectedDate = datePicker.selectedDates[0];\n\n        if (!selectedDate) {\n            return;\n        }\n\n        document.getElementById('datetime-picker').disabled = true;\n        document.getElementById('start-btn').disabled = true;\n\n        const interval = setInterval(() => {\n            const now = new Date();\n            const timeDifference = selectedDate - now;\n\n            if (timeDifference <= 0) {\n                clearInterval(interval);\n                updateTimer({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n                document.getElementById('datetime-picker').disabled = false;\n                iziToast.success({\n                    title: 'Success',\n                    message: 'Countdown timer has ended!'\n                });\n            } else {\n                const time = convertMs(timeDifference);\n                updateTimer(time);\n            }\n        }, 1000);\n    });\n\n    function convertMs(ms) {\n        const second = 1000;\n        const minute = second * 60;\n        const hour = minute * 60;\n        const day = hour * 24;\n\n        const days = Math.floor(ms / day);\n        const hours = Math.floor((ms % day) / hour);\n        const minutes = Math.floor(((ms % day) % hour) / minute);\n        const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n        return { days, hours, minutes, seconds };\n    }\n\n    function updateTimer({ days, hours, minutes, seconds }) {\n        document.querySelector('[data-days]').textContent = addLeadingZero(days);\n        document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n        document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n        document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n    }\n\n    function addLeadingZero(value) {\n        return value < 10 ? `0${value}` : value;\n    }\n}); \n\n\n\n\n\n\n\n\n// import flatpickr from \"flatpickr\";\n// import \"flatpickr/dist/flatpickr.min.css\";\n\n// import iziToast from \"izitoast\";\n// import \"izitoast/dist/css/iziToast.min.css\";\n\n// document.addEventListener('DOMContentLoaded', () => {\n//   const datePicker = flatpickr(\"#datetime-picker\", {\n//     enableTime: true,\n//     time_24hr: true,\n//     defaultDate: new Date(),\n//     minuteIncrement: 1,\n//     onClose(selectedDates) {\n//       const selectedDate = selectedDates[0];\n//       const currentDate = new Date();\n\n//       if (selectedDate <= currentDate) {\n//         iziToast.error({\n//           title: 'Error',\n//           message: 'Please choose a date in the future'\n//         });\n//         document.getElementById('start-btn').disabled = true;\n//       } else {\n//         document.getElementById('start-btn').disabled = false;\n//       }\n//     }\n//   });\n\n//   document.getElementById('start-btn').addEventListener('click', () => {\n//     const selectedDate = datePicker.selectedDates[0];\n\n//     if (!selectedDate) {\n//       return;\n//     }\n\n//     document.getElementById('datetime-picker').disabled = true;\n//     document.getElementById('start-btn').disabled = true;\n\n//     const interval = setInterval(() => {\n//       const now = new Date();\n//       const timeDifference = selectedDate - now;\n\n//       if (timeDifference <= 0) {\n//         clearInterval(interval);\n//         updateTimer({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n//         document.getElementById('datetime-picker').disabled = false;\n//         iziToast.success({\n//           title: 'Success',\n//           message: 'Countdown timer has ended!'\n//         });\n//       } else {\n//         const time = convertMs(timeDifference);\n//         updateTimer(time);\n//       }\n//     }, 1000);\n//   });\n\n//   function convertMs(ms) {\n//     const second = 1000;\n//     const minute = second * 60;\n//     const hour = minute * 60;\n//     const day = hour * 24;\n\n//     const days = Math.floor(ms / day);\n//     const hours = Math.floor((ms % day) / hour);\n//     const minutes = Math.floor(((ms % day) % hour) / minute);\n//     const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//     return { days, hours, minutes, seconds };\n//   }\n\n//   function updateTimer({ days, hours, minutes, seconds }) {\n//     document.querySelector('[data-days]').textContent = addLeadingZero(days);\n//     document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n//     document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n//     document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n//   }\n\n//   function addLeadingZero(value) {\n//     return value < 10 ? `0${value}` : value;\n//   }\n// });"],"names":["datePicker","flatpickr","selectedDates","iziToast","selectedDate","interval","timeDifference","updateTimer","time","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value"],"mappings":"+IAKA,SAAS,iBAAiB,mBAAoB,IAAM,CAElD,MAAMA,EAAaC,EAAU,mBAAoB,CAC3C,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACEA,EAAc,CAAC,GAChB,IAAI,MAGpBC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,oCAC7B,CAAiB,EACD,SAAS,eAAe,WAAW,EAAE,SAAW,IAEhD,SAAS,eAAe,WAAW,EAAE,SAAW,EAEvD,CACT,CAAK,EAED,SAAS,eAAe,WAAW,EAAE,iBAAiB,QAAS,IAAM,CACjE,MAAMC,EAAeJ,EAAW,cAAc,CAAC,EAE/C,GAAI,CAACI,EACD,OAGJ,SAAS,eAAe,iBAAiB,EAAE,SAAW,GACtD,SAAS,eAAe,WAAW,EAAE,SAAW,GAEhD,MAAMC,EAAW,YAAY,IAAM,CAE/B,MAAMC,EAAiBF,EADX,IAAI,KAGhB,GAAIE,GAAkB,EAClB,cAAcD,CAAQ,EACtBE,EAAY,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EACzD,SAAS,eAAe,iBAAiB,EAAE,SAAW,GACtDJ,EAAS,QAAQ,CACb,MAAO,UACP,QAAS,4BAC7B,CAAiB,MACE,CACH,MAAMK,EAAOC,EAAUH,CAAc,EACrCC,EAAYC,CAAI,CACnB,CACJ,EAAE,GAAI,CACf,CAAK,EAED,SAASC,EAAUC,EAAI,CAMnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACzC,CAED,SAASP,EAAY,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACpD,SAAS,cAAc,aAAa,EAAE,YAAcC,EAAeJ,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcI,EAAeH,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcE,EAAeD,CAAO,CAChF,CAED,SAASC,EAAeC,EAAO,CAC3B,OAAOA,EAAQ,GAAK,IAAIA,CAAK,GAAKA,CACrC,CACL,CAAC"}